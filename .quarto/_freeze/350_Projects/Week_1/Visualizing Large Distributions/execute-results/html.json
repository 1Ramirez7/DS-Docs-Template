{
  "hash": "8ed8771423162ec6324f400ff00dc4b1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing Large Distributions\"\nauthor: \"Eduardo I Ramirez\"\nformat:\n  html: \n    code-fold: true\n    code-line-numbers: true\neditor: visual\nexecute:\n  keep-md: true\ndate: \"September 23, 2024\"\n---\n\n\nspace\n\n# Data Structure\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(nycflights13)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# view data\nnycflights13::flights %>%\n  slice(1:3) %>%\n  str()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [3 × 19] (S3: tbl_df/tbl/data.frame)\n $ year          : int [1:3] 2013 2013 2013\n $ month         : int [1:3] 1 1 1\n $ day           : int [1:3] 1 1 1\n $ dep_time      : int [1:3] 517 533 542\n $ sched_dep_time: int [1:3] 515 529 540\n $ dep_delay     : num [1:3] 2 4 2\n $ arr_time      : int [1:3] 830 850 923\n $ sched_arr_time: int [1:3] 819 830 850\n $ arr_delay     : num [1:3] 11 20 33\n $ carrier       : chr [1:3] \"UA\" \"UA\" \"AA\"\n $ flight        : int [1:3] 1545 1714 1141\n $ tailnum       : chr [1:3] \"N14228\" \"N24211\" \"N619AA\"\n $ origin        : chr [1:3] \"EWR\" \"LGA\" \"JFK\"\n $ dest          : chr [1:3] \"IAH\" \"IAH\" \"MIA\"\n $ air_time      : num [1:3] 227 227 160\n $ distance      : num [1:3] 1400 1416 1089\n $ hour          : num [1:3] 5 5 5\n $ minute        : num [1:3] 15 29 40\n $ time_hour     : POSIXct[1:3], format: \"2013-01-01 05:00:00\" \"2013-01-01 05:00:00\" ...\n```\n\n\n:::\n:::\n\n\n# Relationship Between Departure Time & Delays\n\nThe following is a bar plot showing the distribution minute delays. Most flights are delayed less than an hour, and this plot is not the best to visualize the delays per minute so improvements can be made here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot 1: Distribution of Arrival Delays\nggplot(data = nycflights13::flights, aes(x = arr_delay)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  ggtitle(\"Distribution of Arrival Delays\") +\n  xlab(\"Arrival Delay (minutes)\") +\n  ylab(\"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 9430 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Visualizing-Large-Distributions_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nNext plot shows the average departure delay per month, and we can see that June and July have the highest departure delays with December not to far behind. September, October, and November are the months with lowest departure delays with an average of below 7 minutes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Average departure delay per month\navg_dep_delay_month <- flights %>%\n  group_by(month) %>%\n  summarise(avg_dep_delay = mean(dep_delay, na.rm = TRUE))\n\nggplot(avg_dep_delay_month, aes(x = month, y = avg_dep_delay)) +\n  geom_line(color = \"blue\") +\n  labs(title = \"Average Departure Delay per Month\",\n       x = \"Month\",\n       y = \"Average Departure Delay (minutes)\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Visualizing-Large-Distributions_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nThis next plot shows the distributions of departure times. We can see a reduction in flights as the day comes to an end and little to no flights from midnight till 5 am. This plot does a great job in visualizing departure times, but having some information on the number of delay flights per 100 flights or so, and a list of what departure times tend to have the most delays.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = nycflights13::flights, aes(x = dep_time)) +\n  geom_histogram(bins = 30, fill = \"green\", color = \"black\") +\n  ggtitle(\"Distribution of Departure Times\") +\n  xlab(\"Departure Time (formatted as HHMM)\") +\n  ylab(\"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 8255 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Visualizing-Large-Distributions_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n# Bivariate Summary Plot\n\nThis scatter plot with a linear regression line shows the relationship between departure time and arrival delay. This plot shows good information, and it gives some interesting information for which research can expand. The number of delays between 3am and 4am seems to be very low and does not follow the patter for all other hours so worth the investigation why.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = nycflights13::flights, aes(x = dep_time, y = arr_delay)) +\n  geom_point(alpha = 0.2, color = \"purple\") +\n  geom_smooth(method = \"lm\", color = \"red\") +\n  ggtitle(\"Relationship between Departure Time and Arrival Delay\") +\n  xlab(\"Departure Time (formatted as HHMM)\") +\n  ylab(\"Arrival Delay (minutes)\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 9430 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 9430 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Visualizing-Large-Distributions_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nThis plots do well is visualizing the data, but it only scratches the surface so further research will follow, including possible ols regressions to find the best statistical analysis for this data set.\n",
    "supporting": [
      "Visualizing-Large-Distributions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}